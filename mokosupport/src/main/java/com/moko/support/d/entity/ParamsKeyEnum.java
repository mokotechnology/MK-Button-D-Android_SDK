package com.moko.support.d.entity;


import java.io.Serializable;

public enum ParamsKeyEnum implements Serializable {
    KEY_DEVICE_MAC(0x20),
    KEY_AXIS_PARAMS(0x21),
    KEY_BLE_CONNECTABLE(0x22),
    KEY_VERIFY_PASSWORD_ENABLE(0x23),
    KEY_MODIFY_PASSWORD(0x24),
    KEY_EFFECTIVE_CLICK_INTERVAL(0x25),
    KEY_CLOSE(0x26),
    KEY_DEFAULT(0x27),
    KEY_RESET(0x28),
//    KEY_BUTTON_POWER_ENABLE(0x29),
    //    KEY_MANUFACTURER(0x2A),
//    KEY_SOFTWARE_REVISION(0x2C),
//    KEY_HARDWARE_REVISION(0x2D),
//    KEY_MODEL_NUMBER(0x2E),
    KEY_SCAN_RESPONSE_ENABLE(0x2F),
    KEY_CHANGE_PASSWORD_DISCONNECT_ENABLE(0x30),
    KEY_BUTTON_RESET_ENABLE(0x31),
    KEY_SLOT_ADV_ENABLE(0x32),
//    KEY_SLOT_ACTIVE(0x33),
    KEY_SLOT_PARAMS(0x34),
    KEY_SLOT_TRIGGER_PARAMS(0x35),
    KEY_SLOT_ADV_BEFORE_TRIGGER_ENABLE(0x36),
    KEY_SLOT_TRIGGER_ALARM_NOTIFY_TYPE(0x37),
    KEY_ABNORMAL_INACTIVITY_ALARM_STATIC_INTERVAL(0x38),
    KEY_POWER_SAVING_ENABLE(0x39),
    KEY_POWER_SAVING_STATIC_TRIGGER_TIME(0x3A),
    KEY_SLOT_LED_NOTIFY_ALARM_PARAMS(0x3B),
//    KEY_SLOT_VIBRATION_NOTIFY_ALARM_PARAMS(0x3C),
    KEY_SLOT_BUZZER_NOTIFY_ALARM_PARAMS(0x3D),
    KEY_REMOTE_LED_NOTIFY_ALARM_PARAMS(0x3E),
//    KEY_REMOTE_VIBRATION_NOTIFY_ALARM_PARAMS(0x3F),
    KEY_REMOTE_BUZZER_NOTIFY_ALARM_PARAMS(0x40),
    KEY_DISMISS_ALARM(0x41),
    KEY_DISMISS_ALARM_ENABLE(0x42),
    KEY_DISMISS_LED_NOTIFY_ALARM_PARAMS(0x43),
//    KEY_DISMISS_VIBRATION_NOTIFY_ALARM_PARAMS(0x44),
    KEY_DISMISS_BUZZER_NOTIFY_ALARM_PARAMS(0x45),
    KEY_DISMISS_ALARM_TYPE(0x46),
    KEY_SINGLE_PRESS_EVENT_CLEAR(0x47),
    KEY_DOUBLE_PRESS_EVENT_CLEAR(0x48),
    KEY_LONG_PRESS_EVENT_CLEAR(0x49),
    KEY_BATTERY_VOLTAGE(0x4A),
//    KEY_SYSTEM_TIME(0x4B),
    KEY_LOW_POWER_THRESHOLD(0x4C),
    KEY_LOW_POWER_THRESHOLD_60(0x4D),
    KEY_LOW_POWER_THRESHOLD_20(0x4E),
    KEY_SENSOR_TYPE(0x4F),
    KEY_DEVICE_ID(0x50),
    KEY_DEVICE_NAME(0x51),
    KEY_SINGLE_PRESS_EVENTS(0x52),
    KEY_DOUBLE_PRESS_EVENTS(0x53),
    KEY_LONG_PRESS_EVENTS(0x54),
    KEY_PASSWORD(0x55),
    KEY_FIRMWARE_TYPE(0x57),
    ;

    private int paramsKey;

    ParamsKeyEnum(int paramsKey) {
        this.paramsKey = paramsKey;
    }


    public int getParamsKey() {
        return paramsKey;
    }

    public static ParamsKeyEnum fromParamKey(int paramsKey) {
        for (ParamsKeyEnum paramsKeyEnum : ParamsKeyEnum.values()) {
            if (paramsKeyEnum.getParamsKey() == paramsKey) {
                return paramsKeyEnum;
            }
        }
        return null;
    }
}
