if (!isLibrary.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdk 34

    defaultConfig {
        namespace = "com.moko.bxp.button.d"
        if (!isLibrary.toBoolean()) {
            applicationId = "com.moko.bxp.button.d"
        }
        minSdkVersion 26
        targetSdk 34
        versionCode 8
        versionName "1.0.8"

        def formatDate = new Date().format("yyyyMMddHHmm")
        setProperty("archivesBaseName", "MKButtonD_${versionName}_${formatDate}")
    }

    buildTypes {
        release {
            if (!isLibrary.toBoolean()) {
                buildConfigField("boolean", "IS_LIBRARY", "false")
            } else {
                buildConfigField("boolean", "IS_LIBRARY", "true")
            }
            minifyEnabled false
        }
        debug {
            if (!isLibrary.toBoolean()) {
                buildConfigField("boolean", "IS_LIBRARY", "false")
            } else {
                buildConfigField("boolean", "IS_LIBRARY", "true")
            }
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    viewBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            if (!isLibrary.toBoolean()) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            }
        }
    }

    if (isLibrary.toBoolean()) {
        libraryVariants.all { variant ->
            if (variant.buildType.name == "release") {
                // 修改aar名称
                variant.outputs.all { output ->
                    def formatDate = new Date().format("yyyyMMddHHmm")
                    outputFileName = "MKButtonD_${android.defaultConfig.versionName}_${formatDate}.aar"
                }
                // 复制aar到指定目录
                variant.assemble.doLast {
                    variant.outputs.all { output ->
                        // 输出目录在：项目目录/build/outputs/aar/
                        def outputPath = [project.rootDir.absolutePath, "build", "outputs", "aar"].join(File.separator)
                        copy {
                            from output.outputFile
                            into outputPath
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    implementation 'com.github.GrenderG:Toasty:1.4.1'
    implementation 'com.github.Carbs0126:NumberPickerView:master-SNAPSHOT'
    implementation 'com.guolindev.permissionx:permissionx:1.7.1'
    if (!isLibrary.toBoolean()) {
        implementation project(path: ':mokosupport')
    } else {
        implementation files('libs/mokoSupport.jar')
        compileOnly files('libs/mokoBleLib.jar')
        implementation 'no.nordicsemi.android.support.v18:scanner:1.6.0'
        implementation 'no.nordicsemi.android:dfu:2.4.1'
        implementation 'org.greenrobot:eventbus:3.2.0'
        implementation 'com.elvishew:xlog:1.6.1'
        implementation 'no.nordicsemi.android:ble:2.7.2'
        implementation 'androidx.appcompat:appcompat:1.0.0'
    }
}
